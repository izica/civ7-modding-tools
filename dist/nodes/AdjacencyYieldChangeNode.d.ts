import { TObjectValues } from "../types";
import { AGE, YIELD } from "../constants";
import { BaseNode } from "./BaseNode";
export type TAdjacencyYieldChangeNode = Pick<AdjacencyYieldChangeNode, "id" | "age" | "yieldType" | "yieldChange" | "adjacentBiome" | "adjacentConstructible" | "adjacentConstructibleTag" | "adjacentDistrict" | "adjacentFeature" | "adjacentFeatureClass" | "adjacentLake" | "adjacentNaturalWonder" | "adjacentNavigableRiver" | "adjacentQuarter" | "adjacentResource" | "adjacentResourceClass" | "adjacentRiver" | "adjacentSeaResource" | "adjacentTerrain" | "adjacentUniqueQuarter" | "adjacentUniqueQuarterType" | "projectMaxYield" | "self" | "tilesRequired">;
export declare class AdjacencyYieldChangeNode extends BaseNode<TAdjacencyYieldChangeNode> {
    id: `${string}-${string}-${string}-${string}-${string}`;
    age: TObjectValues<typeof AGE> | null;
    yieldType: TObjectValues<typeof YIELD> | null;
    yieldChange: number | null;
    adjacentBiome: string | null;
    adjacentConstructible: string | null;
    adjacentConstructibleTag: string | null;
    adjacentDistrict: string | null;
    adjacentFeature: string | null;
    adjacentFeatureClass: string | null;
    adjacentLake: boolean | null;
    adjacentNaturalWonder: boolean | null;
    adjacentNavigableRiver: boolean | null;
    adjacentQuarter: boolean | null;
    adjacentResource: boolean | null;
    adjacentResourceClass: string | null;
    adjacentRiver: boolean | null;
    adjacentSeaResource: boolean | null;
    adjacentTerrain: string | null;
    adjacentUniqueQuarter: boolean | null;
    adjacentUniqueQuarterType: string | null;
    projectMaxYield: boolean | null;
    self: boolean | null;
    tilesRequired: string | null;
    constructor(payload?: Partial<TAdjacencyYieldChangeNode>);
}
